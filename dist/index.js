/*!
 * tinyjs-plugin-worldbounds
 * Description:Tinyjs 系统边界
 * Author: 清扬陌客
 * Version: v0.1.1
 * Github: https://github.com/qingyangmoke/tinyjs-plugin-worldbounds.git
 */
!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i():"function"==typeof define&&define.amd?define([],i):"object"==typeof exports?exports.WorldBounds=i():(t.Tiny=t.Tiny||{},t.Tiny.WorldBounds=i())}(this,function(){return function(t){function i(e){if(o[e])return o[e].exports;var n=o[e]={exports:{},id:e,loaded:!1};return t[e].call(n.exports,n,n.exports,i),n.loaded=!0,n.exports}var o={};return i.m=t,i.c=o,i.p="/Users/song/Develop/github/tinyjs-plugin-worldbounds/dist",i(0)}([function(t,i,o){t.exports=o(1)},function(t,i,o){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0}),i.CircleBoundController=void 0;var n=o(2),s=e(n);i.CircleBoundController=s.default},function(t,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var o=function(t,i,o,e,n){this.x=t,this.y=i,this.left=t-o,this.right=t+o,this.top=i-o,this.bottom=i+o,this.maxVelcity=n,this.borderThickness=e,this.originRadius=o,this.radius=o-e,this.balls=[]};o.prototype.getX=function(t){return t.body.x},o.prototype.getY=function(t){return t.body.y},o.prototype.addBall=function(t){this.balls.push(t)},o.prototype.removeBall=function(t){var i=this.balls.indexOf(t);i>-1&&this.balls.splice(i,1)},o.prototype.clear=function(){this.balls.length=0},o.prototype.inXaxis=function(t){return this.getX(t)===this.x},o.prototype.inYaxis=function(t){return this.getY(t)===this.y},o.prototype.getAngle=function(t){return Tiny.Physics.P2.Math.wrapAngle(Tiny.Physics.P2.Math.angle(this.x,this.y,this.getX(t),this.getY(t)),!0)},o.prototype.getMaxPointFromBall=function(t){var i=this.radius-t.width/2,o=this.getAngle(t);return this.getMaxPoint(o,i)},o.prototype.getMaxPoint=function(t,i){var o=0,e=0;0==t?(o=i,e=0):t==Math.PI/2?(o=0,e=i):t==Math.PI?(o=-i,e=0):t==-Math.PI/2?(o=0,e=-i):(o=i*Math.cos(t),e=i*Math.sin(t));var n=this.x+o,s=this.y+e;return{x:n,y:s}},o.prototype.inBound=function(t){var i=Math.abs(Tiny.Physics.P2.Math.distance(this.getX(t),this.getY(t),this.x,this.y));return i<=this.radius-t.width/2},o.prototype.update=function(){var t=this;this.balls.forEach(function(i,o){if(!t.inBound(i)){var e=t.getMaxPointFromBall(i),n=t.getX(i),s=t.getY(i);(e.x<t.x&&n<e.x||e.x>t.x&&n>e.x)&&(i.position.x=e.x,i.body.x=i.position.x,i.body.velocity.x*=-1),(s<t.y&&s<e.y||s>t.y&&s>e.y)&&(i.position.y=e.y,i.body.y=i.position.y,i.body.velocity.y*=-1)}i.body.velocity.x=Tiny.Physics.P2.Math.wrap(i.body.velocity.x,-t.maxVelcity,t.maxVelcity),i.body.velocity.y=Tiny.Physics.P2.Math.wrap(i.body.velocity.y,-t.maxVelcity,t.maxVelcity)})},i.default=o}])});